---
AWSTemplateFormatVersion: '2010-09-09'
Description: >

  This Cloudformation Template deploys a private ECS Cluster for the BigBlueButton Frontend (Greenlight and Scalelite).

  Disclaimer: Not for production use. Demo and testing purposes only.

  Author: David Surey <suredavi@amazon.com>

Parameters:
  BBBNotificationTopic:
    Description: Topic to be used for alarm notifications
    Type: String
  BBBECSInstanceType:
    Description: Compute type for ECS Cluster (FARGATE or EC2 instance type, x86_64 only)
    Type: String
    Default: t3.large
    AllowedPattern: ^(fargate|(t2|t3|t3a|m4|m5|m5a|m6i|c4|c5|c5a|c6i|r4|r5|r5a|r6i)\.(medium|large|xlarge|2xlarge|4xlarge|8xlarge|12xlarge|16xlarge|24xlarge))$
  BBBECSMaxInstances:
    Type: Number
    Description: Maximum number of ECS Worker Instances
    Default: 3
  BBBECSMinInstances:
    Type: Number
    Description: Minimum number of ECS Worker Instances
    Default: 1
  BBBECSDesiredInstances:
    Type: Number
    Description: Desired number of ECS Worker Instances
    Default: 1
  BBBApplicationSubnets:
    Description: Comma separated list of the private EC2 instance subnets
    Type: CommaDelimitedList
  BBBECSTaskSecurityGroup:
    Description: Security Group that should be assigned for the EC2 Instances
    Type: String
  BBBLatestECSAmiId:
    Description: AMI id that should be used for the EC2 instaces
    Type: 'AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>'
    Default: '/aws/service/ecs/optimized-ami/amazon-linux-2/recommended/image_id'

Conditions:
  BBBECSFargate: !Equals [!Ref BBBECSInstanceType, fargate]
  BBBECSEC2: !Not [!Equals [!Ref BBBECSInstanceType, fargate]]

Resources:

  BBBECSCluster:
    Type: AWS::ECS::Cluster
    Properties:
      ClusterName: !Sub ${AWS::StackName}-ECSCluster
      CapacityProviders:
        - !If [ BBBECSFargate, FARGATE, !Ref BBBECSCapacityProvider ] 
        - !If [ BBBECSFargate, FARGATE_SPOT, !Ref "AWS::NoValue" ] 
      ClusterSettings:
        - Name: containerInsights
          Value: enabled

  BBBECSCapacityProvider:
    Type: AWS::ECS::CapacityProvider
    Condition: BBBECSEC2
    Properties:
      AutoScalingGroupProvider:
        AutoScalingGroupArn: !Ref BBBECSAutoScaling
        ManagedScaling:
          Status: ENABLED
          MinimumScalingStepSize: !Ref BBBECSMinInstances
          MaximumScalingStepSize: !Ref BBBECSMaxInstances
          TargetCapacity: 90
        ManagedTerminationProtection: DISABLED

  BBBECSAutoScaling:
    Type: AWS::AutoScaling::AutoScalingGroup
    Condition: BBBECSEC2
    Properties:
      VPCZoneIdentifier: !Ref BBBApplicationSubnets
      LaunchConfigurationName: !Ref BBBECSInstanceLaunchConfiguration
      TerminationPolicies:
        - DEFAULT
      MaxSize: !Ref BBBECSMaxInstances
      MinSize: !Ref BBBECSMinInstances
      DesiredCapacity: !Ref BBBECSDesiredInstances
      NotificationConfiguration:
        TopicARN:
          Ref: BBBNotificationTopic
        NotificationTypes:
          - autoscaling:EC2_INSTANCE_LAUNCH
          - autoscaling:EC2_INSTANCE_LAUNCH_ERROR
          - autoscaling:EC2_INSTANCE_TERMINATE
          - autoscaling:EC2_INSTANCE_TERMINATE_ERROR
    CreationPolicy:
      ResourceSignal:
        Timeout: PT15M
    UpdatePolicy:
      AutoScalingReplacingUpdate:
        WillReplace: true

  BBBECSEC2Role:
    Type: AWS::IAM::Role
    Condition: BBBECSEC2
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Principal:
              Service: [ec2.amazonaws.com]
            Action: ["sts:AssumeRole"]
      Path: /
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AmazonEC2ContainerServiceforEC2Role
        - arn:aws:iam::aws:policy/AmazonSSMManagedInstanceCore

  BBBECSEC2InstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Condition: BBBECSEC2
    Properties:
      Path: /
      Roles:
        - !Ref BBBECSEC2Role

  BBBECSInstanceLaunchConfiguration:
    Type: AWS::AutoScaling::LaunchConfiguration
    Condition: BBBECSEC2
    Properties:
      AssociatePublicIpAddress: false
      IamInstanceProfile: !Ref BBBECSEC2InstanceProfile
      ImageId: !Ref BBBLatestECSAmiId
      EbsOptimized: false
      InstanceMonitoring: true
      InstanceType: !Ref BBBECSInstanceType
      SecurityGroups:
        - !Ref BBBECSTaskSecurityGroup
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash -xe
          echo ECS_CLUSTER=${AWS::StackName}-ECSCluster >> /etc/ecs/ecs.config
          yum install -y aws-cfn-bootstrap
          yum update -y ecs-init

          /opt/aws/bin/cfn-signal -e $? --stack ${AWS::StackName} --resource BBBECSAutoScaling --region ${AWS::Region}

Outputs:
  BBBECSCluster:
    Description: A reference to the created Cluster
    Value: !Ref BBBECSCluster
  BBBECSAutoScaling:
    Description: A reference to the created Cluster Autoscaling Group
    Value: !Ref BBBECSAutoScaling
    Condition: BBBECSEC2
  BBBECSEC2Role:
    Description: A reference to the created Cluster Role
    Value: !Ref BBBECSEC2Role
    Condition: BBBECSEC2
  BBBECSEC2InstanceProfile:
    Description: A reference to the created Cluster Instance profile
    Value: !Ref BBBECSEC2InstanceProfile
    Condition: BBBECSEC2
  BBBECSInstanceLaunchConfiguration:
    Description: A reference to the created Cluster Launch Configuration
    Value: !Ref BBBECSInstanceLaunchConfiguration
    Condition: BBBECSEC2